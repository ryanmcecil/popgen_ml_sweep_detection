// set up a simple neutral simulation
initialize() {
	initializeMutationRate(1e-8);
	
	// m1 mutation type: neutral
	initializeMutationType("m1", 0.5, "f", 0.0);
	
	// m2 mutation type: sweep
	initializeMutationType("m2", 0.5, "f", 0.0);
	
	// g1 genomic element type: uses m1 for all mutations
	initializeGenomicElementType("g1", m1, 1.0);
	
	// uniform chromosome of length 100 kb with uniform recombination
	initializeGenomicElement(g1, 0, 100000);
	initializeRecombinationRate(1e-8);
}

// create a population of 10000 individuals
1 {
	defineConstant("simID", getSeed());
	sim.addSubpop("p1", 10000);
	// set fitness of beneficial mutation to 0.15
	defineConstant("fit", 1.0+0.15);
}

// allow burn-in for 10,000 generations
10000 {
		// split off reference population
		sim.addSubpopSplit("p2", 10000, p1);
}

// let populations evolve separately 
11000 late(){
	//save the state of the simulation
	sim.outputFull("neutral/tmp_slim_"+simID+".txt");
	//introduce the adaptive mutation at position 50000
	target = sample(p1.genomes, 1);
	target.addNewDrawnMutation(m2, 50000);

}

// at present generation (11700) -- output sample of 100 individuals from each population
11700 late(){
	p1Individuals = sample(p1.individuals, 100);
	p2Individuals = sample(p2.individuals, 100);
	p1Individuals.genomes.outputMS("neutral/p1_"+simID+"_MS.txt");
	vec = c(p1Individuals, p2Individuals);
	vec.genomes.outputMS("neutral/p1p2_"+simID+"_MS.txt");
}

